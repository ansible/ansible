# Copyright: Contributors to the Ansible project
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

from __future__ import annotations

from ansible.module_utils.facts.system.dns import DnsFactCollector

RESOLVE_CONF_CONTENT = r"""
# Generated by NetworkManager
search example.sample.net
nameserver 75.75.75.75        ; test inline comment
nameserver 75.75.76.76        # test inline comment
    nameserver 2001:558:feed::1
nameserver
sortlist 130.155.160.0/255.255.240.0 130.155.0.0
options timeout:1 retries:1 rotate
"""


class TestDNSFacts:
    def test_parse_resolve_conf(self, mocker):
        mocker.patch(
            "ansible.module_utils.facts.system.dns.get_file_content",
            return_value=RESOLVE_CONF_CONTENT,
        )
        dns_facts = DnsFactCollector().collect()
        expected_dns_facts = {
            "dns": {
                "search": ["example.sample.net"],
                "nameservers": ["75.75.75.75", "75.75.76.76", "2001:558:feed::1"],
                "sortlist": ["130.155.160.0/255.255.240.0", "130.155.0.0"],
                "options": {"timeout": "1", "retries": "1", "rotate": True},
            }
        }
        assert dns_facts == expected_dns_facts

    def test_parse_resolve_conf_negative(self, mocker):
        mocker.patch(
            "ansible.module_utils.facts.system.dns.get_file_content", return_value=""
        )
        dns_facts = DnsFactCollector().collect()
        assert dns_facts == {"dns": {}}
